[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Quarto Website Demo",
    "section": "",
    "text": "Create New Project in R Studio . . . New Directory . . . Quarto Website . . . check ‘Create a git repository’ (cannot be a folder within another repository)\nIn _quarto.yml, add “output-dir: docs” under “project”; other universal options can be set here\nBuild . . . Render Website\nIn parent folder ensure a .nojekyll file is created in parent folder\nPush updates to GitHub\nIn GitHub settings for the repository, click on Pages . . . Deploy from Branch, main/docs . . . save\nURL will be username.github.io/repository name\n\n\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#steps-for-hosting-on-github-pages",
    "href": "index.html#steps-for-hosting-on-github-pages",
    "title": "My Quarto Website Demo",
    "section": "",
    "text": "Create New Project in R Studio . . . New Directory . . . Quarto Website . . . check ‘Create a git repository’ (cannot be a folder within another repository)\nIn _quarto.yml, add “output-dir: docs” under “project”; other universal options can be set here\nBuild . . . Render Website\nIn parent folder ensure a .nojekyll file is created in parent folder\nPush updates to GitHub\nIn GitHub settings for the repository, click on Pages . . . Deploy from Branch, main/docs . . . save\nURL will be username.github.io/repository name\n\n\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#basic-r-code-block",
    "href": "index.html#basic-r-code-block",
    "title": "My Quarto Website Demo",
    "section": "Basic R-code block",
    "text": "Basic R-code block\n\n# R-code\n# Can be hidden by changing echo: false in qmd setings or yml settings\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#ggplot-examples",
    "href": "index.html#ggplot-examples",
    "title": "My Quarto Website Demo",
    "section": "ggplot examples",
    "text": "ggplot examples\nhttps://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code\n\nScatterplot\n\n# install.packages(\"ggplot2\")\n# load package and data\noptions(scipen=999)  # turn-off scientific notation like 1e+48\nlibrary(ggplot2)\ntheme_set(theme_bw())  # pre-set the bw theme.\ndata(\"midwest\", package = \"ggplot2\")\n\n\ngg &lt;- ggplot(midwest, aes(x=area, y=poptotal)) + \n  geom_point(aes(col=state, size=popdensity)) + \n  geom_smooth(method=\"loess\", se=F) + \n  xlim(c(0, 0.1)) + \n  ylim(c(0, 500000)) + \n  labs(subtitle=\"Area Vs Population\", \n       y=\"Population\", \n       x=\"Area\", \n       title=\"Scatterplot\", \n       caption = \"Source: midwest\")\n\nplot(gg)\n\n\n\n\n\n\n\n\n\n\nScatterplot with marginal histogram or boxplot\n(tabset example)\n\nHistogramBoxplot\n\n\n\n#library(ggplot2)\n#install.packages(\"ggExtra\")\nlibrary(ggExtra)\ndata(mpg, package=\"ggplot2\")\n# mpg &lt;- read.csv(\"http://goo.gl/uEeRGu\")\n\n# Scatterplot\ntheme_set(theme_bw())  # pre-set the bw theme.\nmpg_select &lt;- mpg[mpg$hwy &gt;= 35 & mpg$cty &gt; 27, ]\ng &lt;- ggplot(mpg, aes(cty, hwy)) + \n  geom_count() + \n  geom_smooth(method=\"lm\", se=F)\n\nggMarginal(g, type = \"histogram\", fill=\"transparent\")\n\n\n\n\n\n\n\n\n\n\n\nggMarginal(g, type = \"boxplot\", fill=\"transparent\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nOrdered barchart\n\n# Prepare data: group mean city mileage by manufacturer.\ncty_mpg &lt;- aggregate(mpg$cty, by=list(mpg$manufacturer), FUN=mean)  # aggregate\ncolnames(cty_mpg) &lt;- c(\"make\", \"mileage\")  # change column names\ncty_mpg &lt;- cty_mpg[order(cty_mpg$mileage), ]  # sort\ncty_mpg$make &lt;- factor(cty_mpg$make, levels = cty_mpg$make)  # to retain the order in plot.\n\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n# Draw plot\nggplot(cty_mpg, aes(x=make, y=mileage)) + \n  geom_bar(stat=\"identity\", width=.5, fill=\"tomato3\") + \n  labs(title=\"Ordered Bar Chart\", \n       subtitle=\"Make Vs Avg. Mileage\", \n       caption=\"source: mpg\") + \n  theme(axis.text.x = element_text(angle=65, vjust=0.6))\n\n\n\n\n\n\n\n\n\n\nBoxplot\n\n#Boxplot \ng &lt;- ggplot(mpg, aes(manufacturer, cty))\ng + geom_boxplot() + \n  geom_dotplot(binaxis='y', \n               stackdir='center', \n               dotsize = .5, \n               fill=\"red\") +\n  theme(axis.text.x = element_text(angle=65, vjust=0.6)) + \n  labs(title=\"Box plot + Dot plot\", \n       subtitle=\"City Mileage vs Class: Each dot represents 1 row in source data\",\n       caption=\"Source: mpg\",\n       x=\"Class of Vehicle\",\n       y=\"City Mileage\")"
  },
  {
    "objectID": "index.html#table-examples",
    "href": "index.html#table-examples",
    "title": "My Quarto Website Demo",
    "section": "Table examples",
    "text": "Table examples\n\nManual tables\n\n\n\nCol1\nCol2\nCol3\n\n\n\n\n1\n3\n6\n\n\n2\n4\n7\n\n\n3\n5\n8\n\n\n\n\n\nTable with reactable for pagination\n\nlibrary(tidyverse)\nlibrary(gapminder)\nlibrary(reactable)\n\ngapminder %&gt;%\n    select(country, year, lifeExp) %&gt;%\n    mutate(country = as.character(country)) %&gt;%\n    pivot_wider(\n        id_cols = country,\n        names_from = year,\n        values_from = lifeExp\n    ) %&gt;% \n    select(country, '1952', '1972', '1992') %&gt;%\n    rename(Country = country)%&gt;%\n    reactable()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nPractice at creating a website with Quarto hosted in GitHub pages"
  }
]